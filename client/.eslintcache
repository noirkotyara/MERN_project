[{"E:\\WebP\\React+Node\\MERN_project\\client\\src\\index.js":"1","E:\\WebP\\React+Node\\MERN_project\\client\\src\\App.js":"2","E:\\WebP\\React+Node\\MERN_project\\client\\src\\reportWebVitals.js":"3","E:\\WebP\\React+Node\\MERN_project\\client\\src\\components\\AuthPage.jsx":"4","E:\\WebP\\React+Node\\MERN_project\\client\\src\\components\\DetailsPage.jsx":"5","E:\\WebP\\React+Node\\MERN_project\\client\\src\\components\\LinksPage.jsx":"6","E:\\WebP\\React+Node\\MERN_project\\client\\src\\components\\CreatePage.jsx":"7","E:\\WebP\\React+Node\\MERN_project\\client\\src\\hooks\\routes.js":"8","E:\\WebP\\React+Node\\MERN_project\\client\\src\\hooks\\http.js":"9","E:\\WebP\\React+Node\\MERN_project\\client\\src\\hooks\\message.js":"10","E:\\WebP\\React+Node\\MERN_project\\client\\src\\context\\AuthContext.js":"11","E:\\WebP\\React+Node\\MERN_project\\client\\src\\hooks\\auth.js":"12","E:\\WebP\\React+Node\\MERN_project\\client\\src\\components\\common\\Navbar.jsx":"13","E:\\WebP\\React+Node\\MERN_project\\client\\src\\components\\common\\Preloader.jsx":"14","E:\\WebP\\React+Node\\MERN_project\\client\\src\\components\\LinksTable.jsx":"15","E:\\WebP\\React+Node\\MERN_project\\client\\src\\components\\LinkDetails.jsx":"16","E:\\WebP\\React+Node\\MERN_project\\client\\src\\components\\common\\Header.jsx":"17"},{"size":544,"mtime":1611863402172,"results":"18","hashOfConfig":"19"},{"size":752,"mtime":1618215235243,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"19"},{"size":2500,"mtime":1618217984220,"results":"22","hashOfConfig":"19"},{"size":1561,"mtime":1618225672172,"results":"23","hashOfConfig":"19"},{"size":1419,"mtime":1618225431871,"results":"24","hashOfConfig":"19"},{"size":1876,"mtime":1618225469762,"results":"25","hashOfConfig":"19"},{"size":957,"mtime":1611924485485,"results":"26","hashOfConfig":"19"},{"size":1243,"mtime":1618217092041,"results":"27","hashOfConfig":"19"},{"size":195,"mtime":1611855751981,"results":"28","hashOfConfig":"19"},{"size":222,"mtime":1611863119621,"results":"29","hashOfConfig":"19"},{"size":996,"mtime":1611931808732,"results":"30","hashOfConfig":"19"},{"size":1371,"mtime":1618222376784,"results":"31","hashOfConfig":"19"},{"size":477,"mtime":1618227513430,"results":"32","hashOfConfig":"19"},{"size":1363,"mtime":1618225157307,"results":"33","hashOfConfig":"19"},{"size":1715,"mtime":1618227712472,"results":"34","hashOfConfig":"19"},{"size":589,"mtime":1618218095969,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1317wlg",{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"46","usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"53","usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"E:\\WebP\\React+Node\\MERN_project\\client\\src\\index.js",[],["75","76"],"E:\\WebP\\React+Node\\MERN_project\\client\\src\\App.js",["77"],"import \"./App.scss\";\nimport \"materialize-css\";\nimport { useRoutes } from \"./hooks/routes\";\nimport { useAuth } from \"./hooks/auth\";\nimport AuthContext from \"./context/AuthContext\";\nimport { Navbar } from \"./components/common/Navbar\";\nimport Header from \"./components/common/Header\";\n\nfunction App() {\n  const {token, userId, login, logout, ready} = useAuth()\n  const isAuthenticated = !!token\n  const routes = useRoutes(isAuthenticated)\n    \n    return (\n  <AuthContext.Provider value={{ token, userId, login, logout, isAuthenticated }}>\n    <div className=\"container\">\n      {(isAuthenticated) ? <Navbar /> : <Header/>}\n      <div className=\"container center-align\">{routes}</div>\n    </div>\n  </AuthContext.Provider>\n  );\n  \n  \n}\n\nexport default App;\n","E:\\WebP\\React+Node\\MERN_project\\client\\src\\reportWebVitals.js",[],"E:\\WebP\\React+Node\\MERN_project\\client\\src\\components\\AuthPage.jsx",["78","79"],"import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Field, Form, Formik } from 'formik';\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport AuthContext from '../context/AuthContext';\r\nimport { useHttp } from '../hooks/http';\r\nimport { useMessage } from '../hooks/message';\r\nimport * as Icons from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst AuthPage = () => {\r\n    \r\n    const auth = useContext(AuthContext)\r\n    const [submitButton, setSubmitButton] = useState('')\r\n    const message = useMessage()\r\n    const { isLoading, errors, request, clearErrors } = useHttp()\r\n\r\n    useEffect(() => {\r\n        message(errors)\r\n        clearErrors()\r\n    }, [errors, clearErrors, message])\r\n\r\n    const submitHandler = async values => {\r\n        try {\r\n            const response = await request(\r\n                `/api/auth/${submitButton}`, //url\r\n                'POST', //method\r\n                { ...values}, //data for server\r\n                { ['Content-Type']: 'application/json' }, auth) //what type of data\r\n            message(response.message)\r\n            auth.login(response.token, response.userId)\r\n        } catch (e) {}\r\n    }\r\n    return (<div>\r\n            <a className=\"btn-floating btn-large black pulse\"><FontAwesomeIcon icon={Icons.faFeatherAlt} size=\"lg\"/></a> \r\n        <div style={{padding: \"1rem\"}}>\r\n            <Formik\r\n                initialValues={{ email: '', password: '' }}\r\n                onSubmit={submitHandler}\r\n            >\r\n                <Form>\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <Field id=\"email\" name=\"email\" />\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <Field\r\n                        id=\"password\"\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                    />\r\n                    <div className=\"row\">\r\n                        <div className=\"col s11 m5\" style={{margin: \"5px\"}}><button disabled={isLoading} className=\"btn waves-effect waves-teal\" type=\"submit\" onClick={() => setSubmitButton('login')}>LogIn</button></div>\r\n                        <div className=\"col s11 m5\" style={{margin: \"5px\"}}><button disabled={isLoading} className=\"btn waves-effect waves-teal\" type=\"submit\" onClick={() => setSubmitButton('register')}>Registration</button></div>\r\n                    </div>\r\n                </Form>\r\n            </Formik>\r\n        </div>\r\n    </div>)\r\n}\r\nexport default AuthPage","E:\\WebP\\React+Node\\MERN_project\\client\\src\\components\\DetailsPage.jsx",["80","81"],"E:\\WebP\\React+Node\\MERN_project\\client\\src\\components\\LinksPage.jsx",["82","83","84"],"E:\\WebP\\React+Node\\MERN_project\\client\\src\\components\\CreatePage.jsx",["85"],"import { Field, Form, Formik } from \"formik\"\r\nimport { useContext, useEffect } from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport AuthContext from \"../context/AuthContext\"\r\nimport { useHttp } from \"../hooks/http\"\r\nimport { useMessage } from \"../hooks/message\"\r\nimport { Preloader } from \"./common/Preloader\"\r\n\r\nconst CreatePage = () => {\r\n    const { request, errors, loading , clearErrors} = useHttp()\r\n    const history = useHistory()\r\n    const message = useMessage()\r\n    const auth = useContext(AuthContext)\r\n\r\n    useEffect(() => {\r\n        message(errors)\r\n        clearErrors()\r\n    }, [errors, clearErrors, message])\r\n\r\n    \r\n    const submitHandler = async (event) => {\r\n        //link: ''\r\n        \r\n        try {\r\n            if (event.link) {\r\n                const response = await request(\r\n                    '/api/link/generate',\r\n                    'POST',\r\n                    { from: event.link },\r\n                    { Authorization: `Bearer ${auth.token}`, ['Content-Type']: 'application/json' }, auth)\r\n                history.push(`/details/${response.link._id}`)\r\n            }else {\r\n                throw new Error ('link is empty')\r\n            }\r\n        } catch (e) {}\r\n    }\r\n    if(loading){\r\n        return <Preloader/>\r\n    }\r\n    return (<div>\r\n        <h5>Create your shortened link here and now with <br/> ctrl + <span className=\"btn-floating btn-large black pulse\">c &amp; v</span></h5>\r\n        <div><Formik\r\n            initialValues={{ link: '' }}\r\n            onSubmit={submitHandler}\r\n        >\r\n            <Form>\r\n                <label htmlFor=\"link\">Your link</label>\r\n                <Field\r\n                    id=\"link\"\r\n                    name=\"link\"\r\n                    type=\"text\"\r\n                />\r\n            </Form>\r\n        </Formik>\r\n        </div>\r\n\r\n    </div>)\r\n}\r\nexport default CreatePage","E:\\WebP\\React+Node\\MERN_project\\client\\src\\hooks\\routes.js",[],"E:\\WebP\\React+Node\\MERN_project\\client\\src\\hooks\\http.js",[],"E:\\WebP\\React+Node\\MERN_project\\client\\src\\hooks\\message.js",[],"E:\\WebP\\React+Node\\MERN_project\\client\\src\\context\\AuthContext.js",[],"E:\\WebP\\React+Node\\MERN_project\\client\\src\\hooks\\auth.js",["86"],"import { useCallback, useEffect, useState } from \"react\"\r\n\r\nexport const useAuth = () => {\r\n    const [token, setToken] = useState(null)\r\n    const [ready, setReady] = useState(false)\r\n    const [userId, setUserId] = useState(null)\r\n\r\n    const storageName = 'userData'\r\n\r\n    //if localStorage is not empty?\r\n   \r\n    const login = useCallback((token, userId) => {\r\n        setToken(token)\r\n        setUserId(userId)\r\n        localStorage.setItem(storageName, JSON.stringify({userId, token}))\r\n    },[])\r\n\r\n    const logout = useCallback(()=>{\r\n        setToken(null)\r\n        setUserId(null)\r\n        localStorage.removeItem(storageName)\r\n    },[])\r\n\r\n useEffect(()=> {\r\n        const localStoragedata = JSON.parse(localStorage.getItem(storageName)) \r\n        if(localStoragedata && localStoragedata.token){\r\n            login (localStoragedata.token, localStoragedata.userId)\r\n        \r\n    }\r\n        setReady(!!token)\r\n    }, [login])\r\n\r\n\r\n    return {login, logout, token, userId, ready}\r\n}","E:\\WebP\\React+Node\\MERN_project\\client\\src\\components\\common\\Navbar.jsx",["87"],"E:\\WebP\\React+Node\\MERN_project\\client\\src\\components\\common\\Preloader.jsx",[],"E:\\WebP\\React+Node\\MERN_project\\client\\src\\components\\LinksTable.jsx",[],"E:\\WebP\\React+Node\\MERN_project\\client\\src\\components\\LinkDetails.jsx",[],"E:\\WebP\\React+Node\\MERN_project\\client\\src\\components\\common\\Header.jsx",[],{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":10,"column":40,"nodeType":"94","messageId":"95","endLine":10,"endColumn":45},{"ruleId":"96","severity":1,"message":"97","line":27,"column":19,"nodeType":"98","messageId":"99","endLine":27,"endColumn":55,"fix":"100"},{"ruleId":"101","severity":1,"message":"102","line":33,"column":13,"nodeType":"103","endLine":33,"endColumn":63},{"ruleId":"104","severity":1,"message":"105","line":28,"column":8,"nodeType":"106","endLine":28,"endColumn":37,"suggestions":"107"},{"ruleId":"104","severity":1,"message":"108","line":32,"column":8,"nodeType":"106","endLine":32,"endColumn":10,"suggestions":"109"},{"ruleId":"96","severity":1,"message":"97","line":22,"column":108,"nodeType":"98","messageId":"99","endLine":22,"endColumn":144,"fix":"110"},{"ruleId":"104","severity":1,"message":"111","line":25,"column":8,"nodeType":"106","endLine":25,"endColumn":10,"suggestions":"112"},{"ruleId":"104","severity":1,"message":"113","line":28,"column":8,"nodeType":"106","endLine":28,"endColumn":10,"suggestions":"114"},{"ruleId":"96","severity":1,"message":"97","line":30,"column":62,"nodeType":"98","messageId":"99","endLine":30,"endColumn":98,"fix":"115"},{"ruleId":"104","severity":1,"message":"116","line":31,"column":8,"nodeType":"106","endLine":31,"endColumn":15,"suggestions":"117"},{"ruleId":"101","severity":1,"message":"118","line":21,"column":9,"nodeType":"103","endLine":21,"endColumn":77},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"no-unused-vars","'ready' is assigned a value but never used.","Identifier","unusedVar","no-useless-computed-key","Unnecessarily computed property ['Content-Type'] found.","Property","unnecessarilyComputedProperty",{"range":"121","text":"122"},"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'auth'. Either include it or remove the dependency array.","ArrayExpression",["123"],"React Hook useEffect has a missing dependency: 'getLinkDetails'. Either include it or remove the dependency array.",["124"],{"range":"125","text":"122"},"React Hook useCallback has missing dependencies: 'auth' and 'request'. Either include them or remove the dependency array.",["126"],"React Hook useEffect has a missing dependency: 'getLinksList'. Either include it or remove the dependency array.",["127"],{"range":"128","text":"122"},"React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setReady' needs the current value of 'token'.",["129"],"The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",[982,998],"'Content-Type'",{"desc":"130","fix":"131"},{"desc":"132","fix":"133"},[920,936],{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},[999,1015],{"desc":"138","fix":"139"},"Update the dependencies array to be: [request, linkId, auth]",{"range":"140","text":"141"},"Update the dependencies array to be: [getLinkDetails]",{"range":"142","text":"143"},"Update the dependencies array to be: [auth, request]",{"range":"144","text":"145"},"Update the dependencies array to be: [getLinksList]",{"range":"146","text":"147"},"Update the dependencies array to be: [login, token]",{"range":"148","text":"149"},[1119,1148],"[request, linkId, auth]",[1209,1211],"[getLinkDetails]",[1008,1010],"[auth, request]",[1067,1069],"[getLinksList]",[931,938],"[login, token]"]
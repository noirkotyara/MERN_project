[{"E:\\WebP\\React+Node\\MERN_project\\client\\src\\index.js":"1","E:\\WebP\\React+Node\\MERN_project\\client\\src\\App.js":"2","E:\\WebP\\React+Node\\MERN_project\\client\\src\\reportWebVitals.js":"3","E:\\WebP\\React+Node\\MERN_project\\client\\src\\components\\AuthPage.jsx":"4","E:\\WebP\\React+Node\\MERN_project\\client\\src\\components\\DetailsPage.jsx":"5","E:\\WebP\\React+Node\\MERN_project\\client\\src\\components\\LinksPage.jsx":"6","E:\\WebP\\React+Node\\MERN_project\\client\\src\\components\\CreatePage.jsx":"7","E:\\WebP\\React+Node\\MERN_project\\client\\src\\hooks\\routes.js":"8","E:\\WebP\\React+Node\\MERN_project\\client\\src\\hooks\\http.js":"9","E:\\WebP\\React+Node\\MERN_project\\client\\src\\hooks\\message.js":"10","E:\\WebP\\React+Node\\MERN_project\\client\\src\\context\\AuthContext.js":"11","E:\\WebP\\React+Node\\MERN_project\\client\\src\\hooks\\auth.js":"12","E:\\WebP\\React+Node\\MERN_project\\client\\src\\components\\common\\Navbar.jsx":"13","E:\\WebP\\React+Node\\MERN_project\\client\\src\\components\\common\\Preloader.jsx":"14","E:\\WebP\\React+Node\\MERN_project\\client\\src\\components\\LinksTable.jsx":"15","E:\\WebP\\React+Node\\MERN_project\\client\\src\\components\\LinkDetails.jsx":"16"},{"size":544,"mtime":1611863402172,"results":"17","hashOfConfig":"18"},{"size":766,"mtime":1611927438145,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"18"},{"size":2051,"mtime":1611937043961,"results":"21","hashOfConfig":"18"},{"size":1337,"mtime":1611937032326,"results":"22","hashOfConfig":"18"},{"size":1233,"mtime":1611937020338,"results":"23","hashOfConfig":"18"},{"size":1751,"mtime":1611937015897,"results":"24","hashOfConfig":"18"},{"size":957,"mtime":1611924485485,"results":"25","hashOfConfig":"18"},{"size":1269,"mtime":1611936988780,"results":"26","hashOfConfig":"18"},{"size":195,"mtime":1611855751981,"results":"27","hashOfConfig":"18"},{"size":222,"mtime":1611863119621,"results":"28","hashOfConfig":"18"},{"size":996,"mtime":1611931808732,"results":"29","hashOfConfig":"18"},{"size":863,"mtime":1611924217236,"results":"30","hashOfConfig":"18"},{"size":527,"mtime":1611927447252,"results":"31","hashOfConfig":"18"},{"size":797,"mtime":1611931756803,"results":"32","hashOfConfig":"18"},{"size":453,"mtime":1611931623741,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1317wlg",{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"44","usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"50","usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"53","usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"E:\\WebP\\React+Node\\MERN_project\\client\\src\\index.js",[],["74","75"],"E:\\WebP\\React+Node\\MERN_project\\client\\src\\App.js",["76"],"import \"./App.scss\";\nimport \"materialize-css\";\nimport { useRoutes } from \"./hooks/routes\";\nimport { useAuth } from \"./hooks/auth\";\nimport AuthContext from \"./context/AuthContext\";\nimport { Navbar } from \"./components/common/Navbar\";\n\nfunction App() {\n  const {token, userId, login, logout, ready} = useAuth()\n  const isAuthenticated = !!token\n  const routes = useRoutes(isAuthenticated)\n    \n    return (\n  <AuthContext.Provider value={{ token, userId, login, logout, isAuthenticated }}>\n    <div className=\"container\">\n      {(isAuthenticated) && <Navbar />}\n      <div className=\"center-align teal accent-2\">Creates Links App</div>\n      <div className=\"container center-align\">{routes}</div>\n    </div>\n  </AuthContext.Provider>\n  );\n  \n  \n}\n\nexport default App;\n","E:\\WebP\\React+Node\\MERN_project\\client\\src\\reportWebVitals.js",[],"E:\\WebP\\React+Node\\MERN_project\\client\\src\\components\\AuthPage.jsx",["77"],"import { Field, Form, Formik } from 'formik';\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport AuthContext from '../context/AuthContext';\r\nimport { useHttp } from '../hooks/http';\r\nimport { useMessage } from '../hooks/message';\r\n\r\nconst AuthPage = () => {\r\n    \r\n    const auth = useContext(AuthContext)\r\n    const [submitButton, setSubmitButton] = useState('')\r\n    const message = useMessage()\r\n    const { isLoading, errors, request, clearErrors } = useHttp()\r\n\r\n    useEffect(() => {\r\n        message(errors)\r\n        clearErrors()\r\n    }, [errors, clearErrors, message])\r\n\r\n    const submitHandler = async values => {\r\n        try {\r\n            // console.log( `/api/auth/${submitButton}: ${JSON.stringify(values)}`)\r\n            const response = await request(\r\n                `/api/auth/${submitButton}`, //url\r\n                'POST', //method\r\n                { ...values}, //data for server\r\n                { ['Content-Type']: 'application/json' }, auth) //what type of data\r\n            message(response.message)\r\n            auth.login(response.token, response.userId)\r\n        } catch (e) {}\r\n    }\r\n    return (<div>\r\n        AuthPage\r\n        <div>\r\n            <Formik\r\n                initialValues={{ email: '', password: '' }}\r\n                onSubmit={submitHandler}\r\n            >\r\n                <Form>\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <Field id=\"email\" name=\"email\" />\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <Field\r\n                        id=\"password\"\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                    />\r\n                    <button disabled={isLoading} type=\"submit\" onClick={() => setSubmitButton('login')}>LogIn</button>\r\n                    <button disabled={isLoading} type=\"submit\" onClick={() => setSubmitButton('register')}>Registration</button>\r\n                </Form>\r\n            </Formik>\r\n        </div>\r\n    </div>)\r\n}\r\nexport default AuthPage","E:\\WebP\\React+Node\\MERN_project\\client\\src\\components\\DetailsPage.jsx",["78","79","80"],"import { useCallback, useContext, useEffect, useState } from \"react\"\r\nimport { NavLink, useParams } from \"react-router-dom\"\r\nimport AuthContext from \"../context/AuthContext\"\r\nimport { useHttp } from \"../hooks/http\"\r\nimport { useMessage } from \"../hooks/message\"\r\nimport { Preloader } from \"./common/Preloader\"\r\nimport LinkDetails from \"./LinkDetails\"\r\n\r\nconst DetailsPage = () => {\r\n    const linkId = useParams().id\r\n    const auth = useContext(AuthContext)\r\n    const message = useMessage()\r\n    const { request, loading, clearErrors, errors } = useHttp()\r\n    const [linkDetails, setLinkDetails] = useState(null)\r\n\r\n    useEffect(() => {\r\n        message(errors)\r\n        clearErrors()\r\n    }, [errors, clearErrors, message])\r\n\r\n    const getLinkDetails = useCallback(async () => {\r\n        try {\r\n            const response = await request(`/api/link/${linkId}`, 'GET', null, { Authorization: `Bearer ${auth.token}` }, auth)\r\n            setLinkDetails(response)\r\n        } catch (e) { }\r\n    }, [auth.token, request, linkId])\r\n\r\n    useEffect(() => {\r\n        getLinkDetails()\r\n    }, [])\r\n\r\n    if (!loading && linkDetails) {\r\n        return (<div>\r\n            <span> Your link`s details</span>\r\n            <LinkDetails linkDetails={linkDetails} />\r\n        </div>)\r\n    }\r\n    return <Preloader />\r\n}\r\nexport default DetailsPage","E:\\WebP\\React+Node\\MERN_project\\client\\src\\components\\LinksPage.jsx",["81","82","83","84"],"import { useCallback, useContext, useEffect, useState } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport AuthContext from \"../context/AuthContext\"\r\nimport { useHttp } from \"../hooks/http\"\r\nimport { useMessage } from \"../hooks/message\"\r\nimport { Preloader } from \"./common/Preloader\"\r\nimport LinksTable from './LinksTable'\r\n\r\nconst LinksPage = () => {\r\n    const { request, loading, clearErrors, errors } = useHttp()\r\n    const message = useMessage()\r\n    const auth = useContext(AuthContext)\r\n    const [linksList, setLinksList] = useState(null)\r\n\r\n    useEffect(() => {\r\n        message(errors)\r\n        clearErrors()\r\n    }, [errors, message, clearErrors])\r\n\r\n    const getLinksList = useCallback(async () => {\r\n        const response = await request(`/api/link/`, 'GET', null, { Authorization: `Bearer ${auth.token}`, ['Content-Type']: 'application/json' }, auth)\r\n        setLinksList(response)\r\n\r\n    }, [])\r\n    useEffect(() => {\r\n        getLinksList()\r\n    }, [])\r\n\r\n    if (!loading && linksList) {\r\n        return (<div>\r\n            <span>Links Page</span>\r\n            <LinksTable linksList={linksList}/>\r\n        </div>)\r\n    }\r\n    else {\r\n        return <Preloader />\r\n    }\r\n\r\n}\r\nexport default LinksPage","E:\\WebP\\React+Node\\MERN_project\\client\\src\\components\\CreatePage.jsx",["85"],"import { Field, Form, Formik } from \"formik\"\r\nimport { useContext, useEffect } from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport AuthContext from \"../context/AuthContext\"\r\nimport { useHttp } from \"../hooks/http\"\r\nimport { useMessage } from \"../hooks/message\"\r\nimport { Preloader } from \"./common/Preloader\"\r\n\r\nconst CreatePage = () => {\r\n    const { request, errors, loading , clearErrors} = useHttp()\r\n    const history = useHistory()\r\n    const message = useMessage()\r\n    const auth = useContext(AuthContext)\r\n\r\n    useEffect(() => {\r\n        message(errors)\r\n        clearErrors()\r\n    }, [errors, clearErrors, message])\r\n\r\n    \r\n    const submitHandler = async (event) => {\r\n        //link: ''\r\n        \r\n        try {\r\n            if (event.link) {\r\n                const response = await request(\r\n                    '/api/link/generate',\r\n                    'POST',\r\n                    { from: event.link },\r\n                    { Authorization: `Bearer ${auth.token}`, ['Content-Type']: 'application/json' }, auth)\r\n                history.push(`/details/${response.link._id}`)\r\n            }else {\r\n                throw new Error ('link is empty')\r\n            }\r\n        } catch (e) {}\r\n    }\r\n    if(loading){\r\n        return <Preloader/>\r\n    }\r\n    return (<div>\r\n        Create Page\r\n        <div><Formik\r\n            initialValues={{ link: '' }}\r\n            onSubmit={submitHandler}\r\n        >\r\n            <Form>\r\n                <label htmlFor=\"link\">Your link</label>\r\n                <Field\r\n                    id=\"link\"\r\n                    name=\"link\"\r\n                    type=\"text\"\r\n                />\r\n            </Form>\r\n        </Formik>\r\n        </div>\r\n\r\n    </div>)\r\n}\r\nexport default CreatePage","E:\\WebP\\React+Node\\MERN_project\\client\\src\\hooks\\routes.js",[],"E:\\WebP\\React+Node\\MERN_project\\client\\src\\hooks\\http.js",[],"E:\\WebP\\React+Node\\MERN_project\\client\\src\\hooks\\message.js",[],"E:\\WebP\\React+Node\\MERN_project\\client\\src\\context\\AuthContext.js",[],"E:\\WebP\\React+Node\\MERN_project\\client\\src\\hooks\\auth.js",["86"],"import { useCallback, useEffect, useState } from \"react\"\r\n\r\nexport const useAuth = () => {\r\n    const [token, setToken] = useState(null)\r\n    const [ready, setReady] = useState(false)\r\n    const [userId, setUserId] = useState(null)\r\n\r\n    const storageName = 'userData'\r\n\r\n    //if localStorage is not empty?\r\n   \r\n    const login = useCallback((token, userId) => {\r\n        setToken(token)\r\n        setUserId(userId)\r\n        localStorage.setItem(storageName, JSON.stringify({userId, token}))\r\n    },[])\r\n\r\n    const logout = useCallback(()=>{\r\n        setToken(null)\r\n        setUserId(null)\r\n        localStorage.removeItem(storageName)\r\n    },[])\r\n\r\n useEffect(()=> {\r\n        const localStoragedata = JSON.parse(localStorage.getItem(storageName)) \r\n        if(localStoragedata && localStoragedata.token){\r\n            login (localStoragedata.token, localStoragedata.userId)\r\n        \r\n    }\r\n        setReady(!!token)\r\n    }, [login])\r\n\r\n\r\n    return {login, logout, token, userId, ready}\r\n}","E:\\WebP\\React+Node\\MERN_project\\client\\src\\components\\common\\Navbar.jsx",["87"],"import { useContext } from 'react'\r\nimport { NavLink, useHistory } from 'react-router-dom'\r\nimport AuthContext from '../../context/AuthContext'\r\nimport styles from './Navbar.module.scss'\r\n\r\nexport const Navbar = () => {\r\n\r\n    const auth = useContext(AuthContext)\r\n    const history = useHistory()\r\n\r\n    const onLogout = (event) => {\r\n        event.preventDefault()\r\n        auth.logout()\r\n        history.push('/')\r\n    }\r\n    return (<nav>\r\n        <div className=\"nav-wrapper\">\r\n          <a href=\"/\" className=\"brand-logo\">LinksShorts</a>\r\n          <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n            <li><NavLink to=\"/create\">Create new</NavLink></li>\r\n            <li><NavLink to=\"/links\">Links</NavLink></li>\r\n            <li><NavLink to=\"/\" onClick={onLogout}>LogOut</NavLink></li>\r\n          </ul>\r\n        </div>\r\n      </nav>)\r\n}","E:\\WebP\\React+Node\\MERN_project\\client\\src\\components\\common\\Preloader.jsx",[],"E:\\WebP\\React+Node\\MERN_project\\client\\src\\components\\LinksTable.jsx",[],"E:\\WebP\\React+Node\\MERN_project\\client\\src\\components\\LinkDetails.jsx",[],{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":9,"column":40,"nodeType":"94","messageId":"95","endLine":9,"endColumn":45},{"ruleId":"96","severity":1,"message":"97","line":26,"column":19,"nodeType":"98","messageId":"99","endLine":26,"endColumn":55,"fix":"100"},{"ruleId":"92","severity":1,"message":"101","line":2,"column":10,"nodeType":"94","messageId":"95","endLine":2,"endColumn":17},{"ruleId":"102","severity":1,"message":"103","line":26,"column":8,"nodeType":"104","endLine":26,"endColumn":37,"suggestions":"105"},{"ruleId":"102","severity":1,"message":"106","line":30,"column":8,"nodeType":"104","endLine":30,"endColumn":10,"suggestions":"107"},{"ruleId":"92","severity":1,"message":"108","line":2,"column":10,"nodeType":"94","messageId":"95","endLine":2,"endColumn":14},{"ruleId":"96","severity":1,"message":"97","line":21,"column":108,"nodeType":"98","messageId":"99","endLine":21,"endColumn":144,"fix":"109"},{"ruleId":"102","severity":1,"message":"110","line":24,"column":8,"nodeType":"104","endLine":24,"endColumn":10,"suggestions":"111"},{"ruleId":"102","severity":1,"message":"112","line":27,"column":8,"nodeType":"104","endLine":27,"endColumn":10,"suggestions":"113"},{"ruleId":"96","severity":1,"message":"97","line":30,"column":62,"nodeType":"98","messageId":"99","endLine":30,"endColumn":98,"fix":"114"},{"ruleId":"102","severity":1,"message":"115","line":31,"column":8,"nodeType":"104","endLine":31,"endColumn":15,"suggestions":"116"},{"ruleId":"92","severity":1,"message":"117","line":4,"column":8,"nodeType":"94","messageId":"95","endLine":4,"endColumn":14},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"no-unused-vars","'ready' is assigned a value but never used.","Identifier","unusedVar","no-useless-computed-key","Unnecessarily computed property ['Content-Type'] found.","Property","unnecessarilyComputedProperty",{"range":"120","text":"121"},"'NavLink' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'auth'. Either include it or remove the dependency array.","ArrayExpression",["122"],"React Hook useEffect has a missing dependency: 'getLinkDetails'. Either include it or remove the dependency array.",["123"],"'Link' is defined but never used.",{"range":"124","text":"121"},"React Hook useCallback has missing dependencies: 'auth' and 'request'. Either include them or remove the dependency array.",["125"],"React Hook useEffect has a missing dependency: 'getLinksList'. Either include it or remove the dependency array.",["126"],{"range":"127","text":"121"},"React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setReady' needs the current value of 'token'.",["128"],"'styles' is defined but never used.","no-global-assign","no-unsafe-negation",[939,955],"'Content-Type'",{"desc":"129","fix":"130"},{"desc":"131","fix":"132"},[834,850],{"desc":"133","fix":"134"},{"desc":"135","fix":"136"},[999,1015],{"desc":"137","fix":"138"},"Update the dependencies array to be: [request, linkId, auth]",{"range":"139","text":"140"},"Update the dependencies array to be: [getLinkDetails]",{"range":"141","text":"142"},"Update the dependencies array to be: [auth, request]",{"range":"143","text":"144"},"Update the dependencies array to be: [getLinksList]",{"range":"145","text":"146"},"Update the dependencies array to be: [login, token]",{"range":"147","text":"148"},[1000,1029],"[request, linkId, auth]",[1090,1092],"[getLinkDetails]",[922,924],"[auth, request]",[981,983],"[getLinksList]",[931,938],"[login, token]"]